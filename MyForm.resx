<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>